{"version":3,"sources":["components/Landing.js","components/ClientChildren/Client.js","components/ClientChildren/ClientsHeaders.js","components/Clients.js","components/ActionChildren/UpdateClient.js","components/ActionChildren/AddClient.js","components/ActionChildren/ClientInput.js","components/Actions.js","components/AnalyticsChildren/BadgesChildren/MonthNewClients.js","components/AnalyticsChildren/BadgesChildren/EmailsSent.js","components/AnalyticsChildren/BadgesChildren/OutstandingClients.js","components/AnalyticsChildren/BadgesChildren/HottestCountry.js","components/AnalyticsChildren/Badges.js","components/AnalyticsChildren/ChartsChildren/TopEmployees.js","components/AnalyticsChildren/ChartsChildren/SalesSinceDate.js","components/AnalyticsChildren/ChartsChildren/ClientAcquisition.js","components/AnalyticsChildren/ChartsChildren/SalesBy.js","components/AnalyticsChildren/Charts.js","components/Analytics.js","App.js","serviceWorker.js","index.js"],"names":["Landing","id","Component","Client","updateClientData","fullName","state","name","surname","PersonalData","country","props","client","_id","changeHandler","e","target","setState","value","nameArr","this","split","trigger","className","moment","firstContact","format","emailType","sold","owner","modal","close","onClick","type","onChange","ClientHeaders","Clients","data","a","axios","put","response","clientsData","paginate","changeBy","outerText","lowerIndex","higherIndex","input","filterBy","get","placeholder","filter","c","toLowerCase","includes","indexOf","map","key","UpdateClient","getOwners","owners","push","o","find","AddClient","isAllFiledsFilled","firstName","every","i","addNewClient","Date","post","missingFields","style","color","ClientInput","getClients","clientsNames","nameInput","changeName","list","Actions","getClientsNames","clients","MonthNewClients","getCurrentMonthName","getMonth","currentMonthNewClients","count","size","margin","EmailsSent","emailsSent","OutstandingClients","outstandingClients","HottestCountry","hottestCountry","Badges","TopEmployees","topEmployees","width","height","layout","top","right","bottom","left","label","angle","position","tick","fontSize","fill","fontWeight","dataKey","barSize","SalesSinceDate","lastMonthSales","date","stroke","strokeWidth","ClientAcquisition","clientAcquisitionByDate","COLORS","outerRadius","d","SalesBy","category","interval","textAnchor","Charts","Analytics","App","to","textDecoration","exact","path","component","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.128fc274.chunk.js","sourcesContent":["import React, {Component} from 'react'\n\nclass Landing extends Component {\n    render() {\n        return (\n        <div id=\"landing-page-container\">\n            <h1 id=\"landing-page-header\">Client Relationship Managment System</h1>\n            <h2 id=\"landing-page-subheader\">The system that will save you time and money</h2>\n        </div>)\n    }\n}\nexport default Landing","import React, {Component} from 'react'\nimport Popup from \"reactjs-popup\";\nimport moment from 'moment'\nimport { FaCheck } from 'react-icons/fa';\n\nclass Client extends Component {\n    constructor(){\n        super()\n        this.state = {\n            name: \"\",\n            surname: \"\",\n            country: \"\"\n        }\n    }\n\n    updateClientData = () => {\n        let fullName = this.state.name + \" \" + this.state.surname\n        let PersonalData = {\n            country: this.state.country,\n            name: fullName\n        }\n        this.props.updateClientData(this.props.client._id, PersonalData)\n    }\n\n\n    changeHandler = (e) => {\n        let name = e.target.name\n        this.setState({\n            [name]: e.target.value\n        })\n    }\n\n    componentDidMount(){\n        let nameArr = this.props.client.name.split(\" \")\n        let name = nameArr[0]\n        let surname = nameArr[1]\n        let country =  this.props.client.country\n        this.setState({name, surname, country})\n    }\n\n    render() {\n        let client = this.props.client\n        let nameArr = client.name.split(\" \")\n        let name = nameArr[0]\n        let surname = nameArr[1]\n        return (\n        <Popup\n            trigger={<div className=\"client\">\n            <div className=\"table-item\">{name}</div>\n            <div className=\"table-item\">{surname}</div>\n            <div className=\"table-item\">{client.country}</div>\n            <div className=\"table-item\">{moment(client.firstContact).format('DD/MM/YYYY')}</div>\n            <div className=\"table-item\">{client.emailType? client.emailType: \"-\"}</div>\n            <div className=\"table-item\">{client.sold? <FaCheck />: \"-\"}</div>\n            <div className=\"table-item\">{client.owner}</div>\n        </div>}\n            modal>\n            {close => (\n      <div className=\"modal\">\n        <button className=\"button\" onClick={() => close()}>X</button>\n        <div className=\"content\">\n            <div className=\"popup-item\">\n                Name: <input name=\"name\" type=\"text\" value={this.state.name} onChange={this.changeHandler}/>\n            </div>\n            <div className=\"popup-item\">\n                Surname: <input name=\"surname\" type=\"text\" value={this.state.surname} onChange={this.changeHandler}/>\n            </div>\n            <div className=\"popup-item\">\n                Country: <input name=\"country\" type=\"text\" value={this.state.country} onChange={this.changeHandler}/>\n            </div>\n        </div>\n        <div className=\"update-button popup-item\" onClick={this.updateClientData}>Update</div>\n      </div>\n    )}\n        </Popup>\n        )\n    }\n}\nexport default Client","import React, {Component} from 'react'\n\nclass ClientHeaders extends Component {\n    render() {\n        return (\n            <div id=\"clients-table-headers\">\n                <div className=\"table-item\">Name</div>\n                <div className=\"table-item\">Surname</div>\n                <div className=\"table-item\">Country</div>\n                <div className=\"table-item\">First Contact</div>\n                <div className=\"table-item\">Email</div>\n                <div className=\"table-item\">Sold</div>\n                <div className=\"table-item\">Owner</div>\n            </div>)\n    }\n}\nexport default ClientHeaders","import React, {Component} from 'react'\nimport Client from './ClientChildren/Client';\nimport axios from 'axios'\nimport ClientHeaders from './ClientChildren/ClientsHeaders';\n\nclass Clients extends Component {\n    constructor(){\n        super()\n        this.state = {\n            clientsData: \"\",\n            input: \"\",\n            filterBy: \"name\", \n            lowerIndex:0,\n            higherIndex:20\n        }\n    }\n\n    updateClientData = async(id, data) => {\n        const response = await axios.put(`/clients/${id}`, data, function(){})\n        this.setState({ clientsData: response.data})\n      }\n\n    paginate = (e) => {\n        let sign = e.target.outerText\n        let changeBy = (sign === \"<\"? -20 : 20)\n        if(changeBy === -20 && this.state.lowerIndex === 0){return}\n        let lowerIndex = this.state.lowerIndex + changeBy\n        let higherIndex = this.state.higherIndex + changeBy\n        this.setState({\n            lowerIndex, higherIndex\n        })\n    }\n\n    changeHandler = (e) => {\n        let name = e.target.name\n        this.setState({\n            [name]: e.target.value\n        })\n    }\n\n    async componentDidMount() {\n        const response = await axios.get(\"/clients\", function(){})\n        this.setState({ clientsData: response.data})\n      }\n\n    render() {\n        return (\n        <div>\n            <div id=\"filter-bar\">\n                <input name=\"input\" type=\"text\" className=\"filterBy-item\" value={this.state.input} onChange={this.changeHandler} placeholder=\"Search\"></input>\n                <select name=\"filterBy\" className=\"filterBy-item\" value={this.state.filterBy} onChange={this.changeHandler}>\n                    <option value=\"name\">Name</option>\n                    <option value=\"country\">Country</option>\n                    <option value=\"email\">Email</option>\n                    <option value=\"owner\">Owner</option>\n                </select>\n                <div id=\"paginate-button\">\n                    <span  onClick={this.paginate}>{\"<\"}</span><span>{this.state.lowerIndex}-{this.state.higherIndex}</span><span onClick={this.paginate}>{\">\"}</span>\n                </div>\n            </div>\n            <ClientHeaders />\n            <div id=\"clients-table-items\">\n                {this.state.clientsData?(this.state.clientsData\n                    .filter(c => (c[this.state.filterBy].toLowerCase().includes(this.state.input.toLowerCase())))\n                    .filter(c => this.state.clientsData.indexOf(c) >= this.state.lowerIndex && this.state.clientsData.indexOf(c) < this.state.higherIndex)\n                    .map(c => <Client key={c._id} client={c} updateClientData={this.updateClientData}/>)): null}\n            </div>\n        </div>)\n    }\n}\nexport default Clients","import React, {Component} from 'react'\nimport axios from 'axios'\n\nclass UpdateClient extends Component {\n    constructor(){\n        super()\n        this.state = {\n            name: \"\",\n            owner: \"\",\n            emailType: \"\"\n        }\n    }\n\n    getOwners = () => {\n        let owners = []\n        for(let c of this.props.clientsData){\n            if(!owners.includes(c.owner)){\n                owners.push(c.owner)\n            }\n        }\n        return(owners.map(o =>  <option key={o} value={o}>{o}</option>)) \n    }\n\n    updateClientData =  (e) => {\n        let clickedButton = e.target.id\n        let data = {}\n        switch(clickedButton){\n            case \"transfer-button\":\n                data.owner = this.state.owner\n                break\n            case \"send-button\":\n                data.emailType = this.state.emailType\n                break  \n            case \"declare-button\":\n                data.sold = true\n                break\n            default:\n                return  \n        }\n        let client = this.props.clientsData.find(c => c.name === this.props.name)\n        if(!client){return}\n        let id = client._id\n        axios.put(`/clients/${id}`, data, function(){})\n    }\n\n    changeHandler = (e) => {\n        let name = e.target.name\n        this.setState({\n            [name]: e.target.value\n        })\n    }\n\n    render() {\n\n        return (\n        <div>\n            <div id=\"update-actions-container\" >\n                <div id=\"transfer-text\" className=\"update-item\">Transfer ownership to: </div>\n                    <select name=\"owner\" id=\"transfer-select\" className=\"update-item\" value={this.state.owner} onChange={this.changeHandler}>\n                        <option value=\"\">Owner</option>\n                        {this.getOwners()}\n                    </select>\n                <div id=\"transfer-button\" className=\"action-button update-item\" onClick={this.updateClientData} >Transfer</div>\n                <div id=\"send-text\" className=\"update-item\">Send Email:</div>\n                    <select name=\"emailType\" id=\"send-select\" className=\"update-item\" value={this.state.emailType} onChange={this.changeHandler}>\n                        <option value=\"\">Email Type</option>\n                        <option value=\"A\">A</option>\n                        <option value=\"B\">B</option>\n                        <option value=\"C\">C</option>\n                        <option value=\"D\">D</option>\n                    </select>\n                <div id=\"send-button\" className=\"action-button update-item\" onClick={this.updateClientData}>Send</div>\n                <div id=\"declare-text\" className=\"update-item\">Declare sale!</div>\n                <div id=\"declare-button\" className=\"action-button update-item\" onClick={this.updateClientData}>Declare</div>\n            </div>\n        </div>)\n    }\n}\nexport default UpdateClient","import React, {Component} from 'react'\nimport axios from 'axios'\n\nclass AddClient extends Component {\n    constructor(){\n        super()\n        this.state = {\n            firstName: \"\",\n            surname: \"\",\n            country: \"\", \n            owner: \"\",\n            missingFields: false\n        }\n    }\n\n    isAllFiledsFilled = () =>{\n        let fields = [this.state.firstName, this.state.surname, this.state.country, this.setState.owner]\n        return fields.every(i => !(i === \"\"))\n    }\n\n    addNewClient = () => {\n        if(this.isAllFiledsFilled()){\n            let data = {\n                name: this.state.firstName + \" \" + this.state.surname,\n                country: this.state.country, \n                owner: this.state.owner,\n                firstContact: new Date()\n                }\n            axios.post(`/client`, data, function(){})\n            this.setState({\n                missingFields: false\n            })\n        }\n        else{\n            this.setState({\n                missingFields: true\n            })\n        }\n    }\n\n    changeHandler = (e) => {\n        let name = e.target.name\n        this.setState({\n            [name]: e.target.value\n        })\n    }\n\n    render() {\n        return (\n        <div>\n            <h4>ADD CLIENT</h4>\n            <div id=\"add-client-table\">\n                <div className=\"add-client-item\">First name:</div>\n                <input name=\"firstName\" type=\"text\" className=\"add-client-item\" value={this.state.firstName} onChange={this.changeHandler}/>\n                <div className=\"add-client-item\"> Surname: </div>\n                <input name=\"surname\" type=\"text\" className=\"add-client-item\" value={this.state.surname} onChange={this.changeHandler}/>\n                <div className=\"add-client-item\">Country: </div>\n                <input name=\"country\" type=\"text\" className=\"add-client-item\" value={this.state.country} onChange={this.changeHandler}/>\n                <div className=\"add-client-item\">Owner:</div>\n                <input name=\"owner\" type=\"text\" className=\"add-client-item\"  value={this.state.owner} onChange={this.changeHandler}/>\n            </div>\n            <div id=\"add-client-button\" onClick={this.addNewClient}> Add New Client</div>\n            {this.state.missingFields? <h1 style={{color: \"red\"}}>Required fields are missing!</h1> : null}\n        </div>)\n    }\n}\nexport default AddClient","import React, {Component} from 'react'\n\nclass ClientInput extends Component {\n\n    getClients = () => this.props.clientsNames.map(c => <option key={c} value={c}></option>)\n\n    changeHandler = (e) => {\n        let nameInput = e.target.value\n        this.props.changeName(nameInput)\n    }\n\n    render() {\n        return (\n        <div>\n            <h4>UPDATE</h4>\n            <div className=\"update-item\">Client:\n            <input name=\"name\" type=\"text\" id=\"client-name-input\" className=\"update-item\" value={this.props.name} onChange={this.changeHandler} placeholder=\"Client Name\" list=\"clients-list\"/>\n            <datalist id=\"clients-list\">\n               {this.getClients()}\n            </datalist></div>\n        </div>)\n    }\n}\nexport default ClientInput","import React, {Component} from 'react'\nimport axios from 'axios'\nimport UpdateClient from './ActionChildren/UpdateClient';\nimport AddClient from './ActionChildren/AddClient';\nimport ClientInput from './ActionChildren/ClientInput';\n\nclass Actions extends Component {\n    constructor(){\n        super()\n        this.state = {\n            clientsData: \"\",\n            name: \"\"\n        }\n    }\n\n    changeName = (name) => this.setState({name: name})\n   \n    getClientsNames = () => {\n        let clients = []\n        for(let c of this.state.clientsData){\n            if(!clients.includes(c.name)){\n                clients.push(c.name)\n            }\n        }\n        return clients\n    }\n\n    async componentDidMount() {\n        const response = await axios.get(\"/clientsforactions\", function(){})\n        this.setState({ clientsData: response.data})\n      }\n\n    render() {\n        return (\n        <div id=\"actions-container\">\n            {this.state.clientsData?<div>\n            <ClientInput name={this.state.name} clientsNames={this.getClientsNames()} changeName={this.changeName} />\n           <UpdateClient name={this.state.name} clientsData={this.state.clientsData}/></div>: null}\n           <hr></hr>\n           <AddClient addNewClient={this.props.addNewClient}/>\n        </div>)\n    }\n}\nexport default Actions","import React, {Component} from 'react'\nimport axios from 'axios'\nimport { FaChartLine } from 'react-icons/fa';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport Loader from 'react-loader-spinner'\n\nclass MonthNewClients extends Component {\n    constructor(){\n        super()\n        this.state = {\n            currentMonthNewClients: \"\"\n        }\n    }\n    getCurrentMonthName = () => {\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n        const currentDate = new Date()\n\n        return monthNames[currentDate.getMonth()]\n    }\n\n    async componentDidMount() {\n        const response = await axios.get(\"/analytics/badges/newmonthclients\")\n        this.setState({currentMonthNewClients: response.data.count})\n    }\n\n    render() {\n        return (\n        this.state.currentMonthNewClients || this.state.currentMonthNewClients === 0 ?\n        <div>\n            <div className=\"analytics-icon\" id=\"chart-icon\"><FaChartLine  size=\"4em\"/></div>\n            <div className=\"analytics-badges-data\">\n            <div className=\"badge-data\">{this.state.currentMonthNewClients}</div>\n            <div className=\"badge-text\">New {this.getCurrentMonthName()} Clients</div>\n            </div>\n        </div>:\n        <Loader type=\"TailSpin\" style={{margin: \"auto\"}}/>)\n    }\n}\nexport default MonthNewClients","import React, {Component} from 'react'\nimport axios from 'axios'\nimport { FaEnvelope } from 'react-icons/fa';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport Loader from 'react-loader-spinner'\nclass EmailsSent extends Component {\n    constructor(){\n        super()\n        this.state = {\n            emailsSent: \"\"\n        }\n    }\n\n    async componentDidMount() {\n        const response = await axios.get(\"/analytics/badges/emailssent\")\n        this.setState({emailsSent: response.data.emailsSent})\n    }\n\n    render() {\n        return (\n            this.state.emailsSent || this.state.emailsSent === 0 ?\n        <div>\n            <div className=\"analytics-icon\" id=\"envelope-icon\" ><FaEnvelope size=\"4em\"/></div> \n            <div className=\"analytics-badges-data\">\n                <div className=\"badge-data\"> {this.state.emailsSent}</div>\n                <div className=\"badge-text\">Emails Sent</div>\n            </div> \n        </div>:\n           <Loader type=\"TailSpin\" style={{margin: \"auto\"}}/>)\n    }\n}\nexport default EmailsSent","import React, {Component} from 'react'\nimport axios from 'axios'\nimport { FaUserCircle } from 'react-icons/fa';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport Loader from 'react-loader-spinner'\n\nclass OutstandingClients extends Component {\n    constructor(){\n        super()\n        this.state = {\n            outstandingClients: \"\"\n        }\n    }\n\n    async componentDidMount() {\n        const response = await axios.get(\"/analytics/badges/outstandingclients\")\n        this.setState({outstandingClients: response.data.outstandingClients})\n    }\n    render() {\n        return (\n        this.state.outstandingClients || this.state.outstandingClients === 0?\n        <div>\n            <div className=\"analytics-icon\" id=\"user-icon\"><FaUserCircle size=\"4em\"/></div>\n            <div className=\"analytics-badges-data\">\n                <div className=\"badge-data\">  {this.state.outstandingClients}</div>\n                <div className=\"badge-text\">Outstanding Clients</div>\n            </div>\n        </div>:\n        <Loader type=\"TailSpin\" style={{margin: \"auto\"}}/>)\n    }\n}\nexport default OutstandingClients","import React, {Component} from 'react'\nimport axios from 'axios'\nimport { FaGlobeAfrica } from 'react-icons/fa';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport Loader from 'react-loader-spinner'\n\nclass HottestCountry extends Component {\n    constructor(){\n        super()\n        this.state = {\n            hottestCountry: \"\"\n        }\n    }\n\n    async componentDidMount() {\n        const response = await axios.get(\"/analytics/badges/hottestcountry\")\n        this.setState({hottestCountry: response.data._id})\n    }\n    render() {\n        \n        return (\n        this.state.hottestCountry?\n        <div>\n            <div className=\"analytics-icon\" id=\"globe-icon\"><FaGlobeAfrica size=\"4em\"/></div>\n            <div className=\"analytics-badges-data\">\n                <div className=\"badge-data\">{this.state.hottestCountry}</div>\n                <div className=\"badge-text\">Hottest Country</div>\n            </div>\n        </div>:\n        <Loader type=\"TailSpin\" style={{margin: \"auto\"}}/>)\n    }\n}\nexport default HottestCountry","import React, {Component} from 'react'\nimport moment from 'moment'\nimport MonthNewClients from './BadgesChildren/MonthNewClients';\nimport EmailsSent from './BadgesChildren/EmailsSent';\nimport OutstandingClients from './BadgesChildren/OutstandingClients';\nimport HottestCountry from './BadgesChildren/HottestCountry';\n\n\nclass Badges extends Component {\n    render() {\n        return (\n        <div id=\"badges-container\">\n            <MonthNewClients/>\n            <EmailsSent/>\n            <OutstandingClients/>\n            <HottestCountry/>\n        </div>)\n    }\n}\nexport default Badges","import React, {Component} from 'react'\nimport axios from 'axios'\nimport { BarChart, XAxis,YAxis, Tooltip, Bar, ResponsiveContainer} from 'recharts';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport Loader from 'react-loader-spinner'\n\nclass TopEmployees extends Component {\n    constructor(){\n        super()\n        this.state = {\n            topEmployees: []\n        }\n    }\n\n    async componentDidMount() {\n        const response = await axios.get(\"/analytics/charts/topemployees\")\n        this.setState({topEmployees: response.data})\n    }\n    render() {\n        \n        return (\n            this.state.topEmployees[0]?    \n            <div id=\"top-employees-container\">\n                Top Employees\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <BarChart\n                        className=\"top-employees-chart\"\n                        layout=\"vertical\"\n                        data={this.state.topEmployees}\n                        margin={{\n                        top: 20, right: 20, bottom: 20, left: 20,\n                        }}>\n                        <XAxis type=\"number\" label={{ value: 'Sales', angle: 0, position: 'bottom' }} tick={{fontSize: 11, fill:\"black\", fontWeight:\"bold\"}} />\n                        <YAxis dataKey=\"_id\" type=\"category\" tick={{fontSize: 11, fill:\"black\", fontWeight:\"bold\"}} />\n                        <Tooltip />\n                        <Bar dataKey=\"count\" barSize={20} fill=\"#003f5c\" />\n                    </BarChart>\n                </ResponsiveContainer>\n            </div>:\n            <Loader type=\"TailSpin\" style={{margin: \"auto\"}}/>    \n        )\n    }\n}\nexport default TopEmployees","import React, {Component} from 'react'\nimport axios from 'axios'\nimport { LineChart, XAxis,YAxis, Tooltip, Line, ResponsiveContainer} from 'recharts';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport Loader from 'react-loader-spinner'\n\nclass SalesSinceDate extends Component {\n    constructor(){\n        super()\n        this.state = {\n            lastMonthSales: []\n        }\n    }\n\n    async componentDidMount() {\n        const response = await axios.get(\"/analytics/charts/lastmonthsales\")\n        this.setState({lastMonthSales: response.data})\n    }\n    render() {\n        return (\n            this.state.lastMonthSales[0]?  \n            <div id=\"sales-since-container\">\n                Sales Since {this.state.lastMonthSales[0].date}\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <LineChart   className=\"sales-since-chart\" width={900} height={200} data={this.state.lastMonthSales}\n                        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n                        <XAxis dataKey=\"date\"  label={{ value: 'Date', angle: 0, position: 'bottom' }} tick={{fontSize: 10, fill:\"black\", fontWeight:\"bold\"}}/>\n                        <YAxis tick={{fontSize: 10, fill:\"black\", fontWeight:\"bold\"}} />\n                        <Tooltip />\n                        <Line type=\"monotone\" dataKey=\"sales\" stroke=\"#ff6e54\" strokeWidth={4} />\n                    </LineChart>\n                </ResponsiveContainer>\n            </div>:\n            <Loader type=\"TailSpin\" style={{margin: \"auto\"}}/>      \n        )\n    }\n}\nexport default SalesSinceDate","import React, {Component} from 'react'\nimport axios from 'axios'\nimport { PieChart, Pie, Cell, Tooltip, ResponsiveContainer} from 'recharts';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport Loader from 'react-loader-spinner'\n  \nclass ClientAcquisition extends Component {\n  constructor(){\n    super()\n    this.state = {\n        clientAcquisitionByDate: []\n    }\n}\n\nasync componentDidMount() {\n    const response = await axios.get(\"/analytics/charts/salesbyaquisitiondate\")\n    this.setState({clientAcquisitionByDate: response.data})\n}\n    render() {\n        const COLORS = [`#795548`, `#34495e`, `#95a5a6`];\n        let data = this.state.clientAcquisitionByDate\n        return (\n          this.state.clientAcquisitionByDate[0]?  \n          <div id=\"client-aqcuisition-container\">\n            Client Aqcuisition\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <PieChart  className=\"client-acquisition-chart\">\n                  <Pie\n                    data={data}\n                    outerRadius={70}\n                    label\n                    fill=\"#8884d8\"\n                    dataKey=\"sales\">\n                    {data.map(d => <Cell key={`cell-${data.indexOf(d)}`} fill={COLORS[data.indexOf(d)]} />)}\n                  </Pie>\n                  <Tooltip />\n                </PieChart>\n              </ResponsiveContainer>\n            </div>:\n            <Loader type=\"TailSpin\" style={{margin: \"auto\"}}/>      \n          );\n        }\n      }\n      \nexport default ClientAcquisition","import React, {Component} from 'react'\nimport axios from 'axios'\nimport { BarChart, XAxis,YAxis, Tooltip, Bar, ResponsiveContainer} from 'recharts';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport Loader from 'react-loader-spinner'\n\nclass SalesBy extends Component {\n    constructor(){\n        super()\n        this.state = {\n            data: [],\n            category: \"country\"\n        }\n    }\n\n    changeHandler = (e) => {\n        let name = e.target.name\n        this.setState({\n            [name]: e.target.value\n        }, async () =>{\n            const response = await axios.get(`/analytics/charts/salesby/${this.state.category}`)\n            this.setState({data: response.data})\n        })\n    }\n\n    async componentDidMount(){\n        const response = await axios.get(`/analytics/charts/salesby/${this.state.category}`)\n        this.setState({data: response.data})\n    }\n\n    render() {\n        return (\n        this.state.data[0]? \n        <div className=\"sales-by-chart\">\n            <div id=\"sales-by-container\">Sales By\n                <select id=\"sales-by-select\" name=\"category\" value={this.state.category} onChange={this.changeHandler}>\n                        <option value=\"country\">Country</option>\n                        <option value=\"firstContact\">Month(all time)</option>\n                        <option value=\"emailType\">Email</option>\n                        <option value=\"owner\">Owner</option>\n                </select>\n            </div>\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <BarChart\n                    data={this.state.data}\n                    margin={{\n                    top: 20, right: 20, bottom: 20, left: 20,\n                    }}>\n                    <YAxis type=\"number\" label={{ value: 'Sales', angle: -90, position: 'insideLeft' }} tick={{fontSize: 10, fill:\"black\", fontWeight:\"bold\"}}/>\n                    <XAxis dataKey=\"_id\" interval={0} angle={-30} tick={{fontSize: 9, fill:\"black\", fontWeight:\"bold\", textAnchor: 'end'}}/>\n                    <Tooltip />\n                    <Bar dataKey=\"count\" fill=\"#955196\" />\n                </BarChart>\n            </ResponsiveContainer>\n        </div>:\n        <Loader type=\"TailSpin\" style={{margin: \"auto\"}}/>\n        )\n    }\n}\nexport default SalesBy","import React, {Component} from 'react'\nimport TopEmployees from './ChartsChildren/TopEmployees';\nimport SalesSinceDate from './ChartsChildren/SalesSinceDate';\nimport ClientAcquisition from './ChartsChildren/ClientAcquisition';\nimport SalesBy from './ChartsChildren/SalesBy';\n\nclass Charts extends Component {\n    render() {\n        return (\n        <div id=\"charts-container\">\n            <TopEmployees />\n            <SalesBy />\n            <SalesSinceDate />\n            <ClientAcquisition />\n        </div>)\n    }\n}\nexport default Charts","import React, {Component} from 'react'\nimport Badges from './AnalyticsChildren/Badges';\nimport Charts from './AnalyticsChildren/Charts';\n\nclass Analytics extends Component {\n    render() {\n        return (\n        <div>\n            <Badges/>\n            <Charts/> \n        </div>)\n    }\n}\nexport default Analytics","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\nimport './App.css';\nimport Landing from './components/Landing';\nimport Clients from './components/Clients';\nimport Actions from './components/Actions';\nimport Analytics from './components/Analytics';\n\nclass App extends Component {\n  render(){\n    return (\n      <Router>\n        <div className=\"App\">\n          <div id=\"nav-bar\">\n            <Link to=\"/\" style={{ textDecoration: 'none'}}><div className=\"nav-bar-tab\">Home</div> </Link>\n            <Link to=\"/clients\" style={{ textDecoration: 'none'}}> <div className=\"nav-bar-tab\">Clients</div> </Link>\n            <Link to=\"/actions\" style={{ textDecoration: 'none'}}>  <div className=\"nav-bar-tab\">Actions</div> </Link>\n            <Link to=\"/analytics\" style={{ textDecoration: 'none'}}> <div className=\"nav-bar-tab\"> Analytics</div> </Link>\n          </div>\n          <Route exact path=\"/\" component={Landing}/>\n          <Route exact path=\"/clients\" render={() => <Clients />} />\n          <Route exact path=\"/actions\" render={() => <Actions />} />\n          <Route exact path=\"/analytics\" render={() => <Analytics />} />\n        </div>\n      </Router>\n\n    )\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}